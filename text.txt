webwas / webwas!00
================================================================

https://github.com/skcc-eomjoonsik/edu-apache-tomcat/blob/main/APACHE.md

-- [Apache] 2.4.64를 받아서 패치 진행방식을 설명
-- [Tomcat] 10.1.45 최신버전이 아닌 10.1.43을 설치하여 패치 방식 확인

-- Apache configure 이후에 configure.nice 등의 파일이 생성되는데,
	추후 패치와 유지보수를 위해 꼭 유지하면 좋다.
	
-- Apache 데몬 자체가  80,443을 사용하지 않는 것을 권고한다.
	-- 8080, 8443으로 띄우고 L4가 해당 포트를 보도록 설정

-- Server 인스턴스 생성은 template 디렉토리를 서버명으로 적절하게 복제하는과정이다.

-- 운영 환경에서는 [Apache] mod_write.so를 많이 사용한다.

-- [tomcat] auto_restart.sh 스크립트는 한번 보면 좋을지두
	-- 소스배포 후 트리거를 걸면 tomcat이 알아서 재기동
	-- 인스턴스별 로그 디렉토리를 매분 확인하며 seed라는 명칭의 파일이 있을 경우재기동
	
-- 톰캣 클러스터링 해야할 경우 server.xml.cluster를 server.xml로 변경하여 사용한다.

-- Apache - uri 설정의 의미는 jsp 확장자는 tomcat에서 처리하고 나머지는 apache에서 처리하겠다는 의미


D0417DDB91D9D8D6345415CCBE52ABA4.tomcatServer11	
	--> 11인스턴스를 죽이고 새로고침하면 
D0417DDB91D9D8D6345415CCBE52ABA4.tomcatServer12
	--> 세션은 유지됨
	
	
-- 스티키 세션을 설정해 두었기에 한번 A에 붙은놈은 계속 글로감
[스티키 세션을 설정해 두어도 될듯]

-- Apache 모니터링을 위한 설정은 httppd-info.conf에 있다.	
	- server-info, server-status는 보안상 내부에서만 오픈되도록 설정한다.
	
-- Tomcat 모니터링은 probe.war를 통해 하며, 운영 환경에서는 이를 스크립트화 하여 모니터링한다.
	- web_mon_cron.sh를 cron 등록
	- ondemand 확인 시 check_web.sh 사용
	- tomcat은 모니터링을 위해서는 probe.war 적용이 되어 있어야 함
	
-- Apache/Tomcat 모니터링 